{
  "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adminContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "charCode",
          "type": "uint32"
        }
      ],
      "name": "CharacterRemovedFromWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "charCode",
          "type": "uint32"
        }
      ],
      "name": "CharacterWhitelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "word",
          "type": "string"
        }
      ],
      "name": "RestrictWordAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "word",
          "type": "string"
        }
      ],
      "name": "RestrictWordRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "tokenId",
          "type": "string"
        }
      ],
      "name": "TakedownAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "tokenId",
          "type": "string"
        }
      ],
      "name": "TakedownRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NAME_MANAGER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "words",
          "type": "string[]"
        }
      ],
      "name": "addToRestrictWords",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "tokenIds",
          "type": "string[]"
        }
      ],
      "name": "addToTakedownList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32[]",
          "name": "charCodes",
          "type": "uint32[]"
        }
      ],
      "name": "addToWhitelistCharacters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adminContract",
      "outputs": [
        {
          "internalType": "contract IJNSAdminContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRestrictWords",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTakedownList",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hashRestrictWords",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hashTakedownList",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenId",
          "type": "string"
        }
      ],
      "name": "isInTakedownList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "word",
          "type": "string"
        }
      ],
      "name": "isWordRestricted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "word",
          "type": "string"
        }
      ],
      "name": "isWordWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "words",
          "type": "string[]"
        }
      ],
      "name": "removeFromRestrictWords",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "tokenIds",
          "type": "string[]"
        }
      ],
      "name": "removeFromTakedownList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32[]",
          "name": "charCodes",
          "type": "uint32[]"
        }
      ],
      "name": "removeFromWhitelistCharacters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "whitelistCharacters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
  "receipt": {
    "to": null,
    "from": "0x26c0d1c4F49C59ACc3E818749758917bBe946d06",
    "contractAddress": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
    "transactionIndex": 0,
    "gasUsed": "2429964",
    "logsBloom": "0x
    "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689",
    "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000061",
        "logIndex": 0,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000062",
        "logIndex": 1,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000063",
        "logIndex": 2,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000064",
        "logIndex": 3,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000065",
        "logIndex": 4,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000066",
        "logIndex": 5,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000067",
        "logIndex": 6,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000068",
        "logIndex": 7,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000069",
        "logIndex": 8,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000006a",
        "logIndex": 9,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000006b",
        "logIndex": 10,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000006c",
        "logIndex": 11,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000006d",
        "logIndex": 12,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000006e",
        "logIndex": 13,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000006f",
        "logIndex": 14,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000070",
        "logIndex": 15,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000071",
        "logIndex": 16,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000072",
        "logIndex": 17,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000073",
        "logIndex": 18,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000074",
        "logIndex": 19,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000075",
        "logIndex": 20,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000076",
        "logIndex": 21,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000077",
        "logIndex": 22,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000078",
        "logIndex": 23,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000079",
        "logIndex": 24,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000007a",
        "logIndex": 25,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000030",
        "logIndex": 26,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000031",
        "logIndex": 27,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000032",
        "logIndex": 28,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000033",
        "logIndex": 29,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000034",
        "logIndex": 30,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000035",
        "logIndex": 31,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000036",
        "logIndex": 32,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000037",
        "logIndex": 33,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000038",
        "logIndex": 34,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 18167786,
        "transactionHash": "0x93c91fe8baeecac889ff845f287f1538d8597de891dca0a63e9bc85c39690ebe",
        "address": "0xcB9C6fDf14f7a40981b2372078e59b4a3E53Ec00",
        "topics": [
          "0x0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000039",
        "logIndex": 35,
        "blockHash": "0x5985ee33cbf99ffd78bb10758b6630caad70773e742f8e55236ee990fbe4e689"
      }
    ],
    "blockNumber": 18167786,
    "cumulativeGasUsed": "2429964",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xbcda9CBB169993F78f3d265e2318a25b2966D182"
  ],
  "numDeployments": 1,
  "solcInputHash": "98405d5ede56ec822403c54e3b4f424c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"charCode\",\"type\":\"uint32\"}],\"name\":\"CharacterRemovedFromWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"charCode\",\"type\":\"uint32\"}],\"name\":\"CharacterWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"word\",\"type\":\"string\"}],\"name\":\"RestrictWordAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"word\",\"type\":\"string\"}],\"name\":\"RestrictWordRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenId\",\"type\":\"string\"}],\"name\":\"TakedownAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenId\",\"type\":\"string\"}],\"name\":\"TakedownRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"words\",\"type\":\"string[]\"}],\"name\":\"addToRestrictWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"tokenIds\",\"type\":\"string[]\"}],\"name\":\"addToTakedownList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"charCodes\",\"type\":\"uint32[]\"}],\"name\":\"addToWhitelistCharacters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminContract\",\"outputs\":[{\"internalType\":\"contract IJNSAdminContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRestrictWords\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTakedownList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hashRestrictWords\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hashTakedownList\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenId\",\"type\":\"string\"}],\"name\":\"isInTakedownList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"word\",\"type\":\"string\"}],\"name\":\"isWordRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"word\",\"type\":\"string\"}],\"name\":\"isWordWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"words\",\"type\":\"string[]\"}],\"name\":\"removeFromRestrictWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"tokenIds\",\"type\":\"string[]\"}],\"name\":\"removeFromTakedownList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"charCodes\",\"type\":\"uint32[]\"}],\"name\":\"removeFromWhitelistCharacters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"whitelistCharacters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"jns-admin-contract/contracts/NameManager.sol\":\"NameManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControlDefaultAdminRules.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/IAccessControlDefaultAdminRules.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\n\\n/**\\n * @dev External interface of AccessControlDefaultAdminRules declared to support ERC165 detection.\\n *\\n * _Available since v4.9._\\n */\\ninterface IAccessControlDefaultAdminRules is IAccessControl {\\n    /**\\n     * @dev Emitted when a {defaultAdmin} transfer is started, setting `newAdmin` as the next\\n     * address to become the {defaultAdmin} by calling {acceptDefaultAdminTransfer} only after `acceptSchedule`\\n     * passes.\\n     */\\n    event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule);\\n\\n    /**\\n     * @dev Emitted when a {pendingDefaultAdmin} is reset if it was never accepted, regardless of its schedule.\\n     */\\n    event DefaultAdminTransferCanceled();\\n\\n    /**\\n     * @dev Emitted when a {defaultAdminDelay} change is started, setting `newDelay` as the next\\n     * delay to be applied between default admin transfer after `effectSchedule` has passed.\\n     */\\n    event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule);\\n\\n    /**\\n     * @dev Emitted when a {pendingDefaultAdminDelay} is reset if its schedule didn't pass.\\n     */\\n    event DefaultAdminDelayChangeCanceled();\\n\\n    /**\\n     * @dev Returns the address of the current `DEFAULT_ADMIN_ROLE` holder.\\n     */\\n    function defaultAdmin() external view returns (address);\\n\\n    /**\\n     * @dev Returns a tuple of a `newAdmin` and an accept schedule.\\n     *\\n     * After the `schedule` passes, the `newAdmin` will be able to accept the {defaultAdmin} role\\n     * by calling {acceptDefaultAdminTransfer}, completing the role transfer.\\n     *\\n     * A zero value only in `acceptSchedule` indicates no pending admin transfer.\\n     *\\n     * NOTE: A zero address `newAdmin` means that {defaultAdmin} is being renounced.\\n     */\\n    function pendingDefaultAdmin() external view returns (address newAdmin, uint48 acceptSchedule);\\n\\n    /**\\n     * @dev Returns the delay required to schedule the acceptance of a {defaultAdmin} transfer started.\\n     *\\n     * This delay will be added to the current timestamp when calling {beginDefaultAdminTransfer} to set\\n     * the acceptance schedule.\\n     *\\n     * NOTE: If a delay change has been scheduled, it will take effect as soon as the schedule passes, making this\\n     * function returns the new delay. See {changeDefaultAdminDelay}.\\n     */\\n    function defaultAdminDelay() external view returns (uint48);\\n\\n    /**\\n     * @dev Returns a tuple of `newDelay` and an effect schedule.\\n     *\\n     * After the `schedule` passes, the `newDelay` will get into effect immediately for every\\n     * new {defaultAdmin} transfer started with {beginDefaultAdminTransfer}.\\n     *\\n     * A zero value only in `effectSchedule` indicates no pending delay change.\\n     *\\n     * NOTE: A zero value only for `newDelay` means that the next {defaultAdminDelay}\\n     * will be zero after the effect schedule.\\n     */\\n    function pendingDefaultAdminDelay() external view returns (uint48 newDelay, uint48 effectSchedule);\\n\\n    /**\\n     * @dev Starts a {defaultAdmin} transfer by setting a {pendingDefaultAdmin} scheduled for acceptance\\n     * after the current timestamp plus a {defaultAdminDelay}.\\n     *\\n     * Requirements:\\n     *\\n     * - Only can be called by the current {defaultAdmin}.\\n     *\\n     * Emits a DefaultAdminRoleChangeStarted event.\\n     */\\n    function beginDefaultAdminTransfer(address newAdmin) external;\\n\\n    /**\\n     * @dev Cancels a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}.\\n     *\\n     * A {pendingDefaultAdmin} not yet accepted can also be cancelled with this function.\\n     *\\n     * Requirements:\\n     *\\n     * - Only can be called by the current {defaultAdmin}.\\n     *\\n     * May emit a DefaultAdminTransferCanceled event.\\n     */\\n    function cancelDefaultAdminTransfer() external;\\n\\n    /**\\n     * @dev Completes a {defaultAdmin} transfer previously started with {beginDefaultAdminTransfer}.\\n     *\\n     * After calling the function:\\n     *\\n     * - `DEFAULT_ADMIN_ROLE` should be granted to the caller.\\n     * - `DEFAULT_ADMIN_ROLE` should be revoked from the previous holder.\\n     * - {pendingDefaultAdmin} should be reset to zero values.\\n     *\\n     * Requirements:\\n     *\\n     * - Only can be called by the {pendingDefaultAdmin}'s `newAdmin`.\\n     * - The {pendingDefaultAdmin}'s `acceptSchedule` should've passed.\\n     */\\n    function acceptDefaultAdminTransfer() external;\\n\\n    /**\\n     * @dev Initiates a {defaultAdminDelay} update by setting a {pendingDefaultAdminDelay} scheduled for getting\\n     * into effect after the current timestamp plus a {defaultAdminDelay}.\\n     *\\n     * This function guarantees that any call to {beginDefaultAdminTransfer} done between the timestamp this\\n     * method is called and the {pendingDefaultAdminDelay} effect schedule will use the current {defaultAdminDelay}\\n     * set before calling.\\n     *\\n     * The {pendingDefaultAdminDelay}'s effect schedule is defined in a way that waiting until the schedule and then\\n     * calling {beginDefaultAdminTransfer} with the new delay will take at least the same as another {defaultAdmin}\\n     * complete transfer (including acceptance).\\n     *\\n     * The schedule is designed for two scenarios:\\n     *\\n     * - When the delay is changed for a larger one the schedule is `block.timestamp + newDelay` capped by\\n     * {defaultAdminDelayIncreaseWait}.\\n     * - When the delay is changed for a shorter one, the schedule is `block.timestamp + (current delay - new delay)`.\\n     *\\n     * A {pendingDefaultAdminDelay} that never got into effect will be canceled in favor of a new scheduled change.\\n     *\\n     * Requirements:\\n     *\\n     * - Only can be called by the current {defaultAdmin}.\\n     *\\n     * Emits a DefaultAdminDelayChangeScheduled event and may emit a DefaultAdminDelayChangeCanceled event.\\n     */\\n    function changeDefaultAdminDelay(uint48 newDelay) external;\\n\\n    /**\\n     * @dev Cancels a scheduled {defaultAdminDelay} change.\\n     *\\n     * Requirements:\\n     *\\n     * - Only can be called by the current {defaultAdmin}.\\n     *\\n     * May emit a DefaultAdminDelayChangeCanceled event.\\n     */\\n    function rollbackDefaultAdminDelay() external;\\n\\n    /**\\n     * @dev Maximum time in seconds for an increase to {defaultAdminDelay} (that is scheduled using {changeDefaultAdminDelay})\\n     * to take effect. Default to 5 days.\\n     *\\n     * When the {defaultAdminDelay} is scheduled to be increased, it goes into effect after the new delay has passed with\\n     * the purpose of giving enough time for reverting any accidental change (i.e. using milliseconds instead of seconds)\\n     * that may lock the contract. However, to avoid excessive schedules, the wait is capped by this function and it can\\n     * be overrode for a custom {defaultAdminDelay} increase scheduling.\\n     *\\n     * IMPORTANT: Make sure to add a reasonable amount of time while overriding this value, otherwise,\\n     * there's a risk of setting a high new delay that goes into effect almost immediately without the\\n     * possibility of human intervention in the case of an input error (eg. set milliseconds instead of seconds).\\n     */\\n    function defaultAdminDelayIncreaseWait() external view returns (uint48);\\n}\\n\",\"keccak256\":\"0x4025f2c243843858eba5f4588189430189a6712f12183d9b4e2e876550428a0d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\"},\"jns-admin-contract/contracts/IJNSAdminContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\nimport \\\"@openzeppelin/contracts/access/IAccessControlDefaultAdminRules.sol\\\";\\nimport \\\"./INameManager.sol\\\";\\n\\ninterface IJNSAdminContract is IAccessControlDefaultAdminRules {\\n    function changeRecipientAddress(\\n        address payable newWithdrawalAddress\\n    ) external;\\n\\n    function changeOracleAddress(address newOracleAddress) external;\\n\\n    function setNameManagerAddress(INameManager newNameManagerAddress) external;\\n\\n    function oracleAddress() external view returns (address);\\n\\n    function setRentPrices(uint256[] calldata rentPrices) external;\\n\\n    function getRentPrices() external view returns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0x412bb84a1163d8cfdf21618911b379ff9339d9c46941a56a8a229e3b8fa06e21\",\"license\":\"MIT\"},\"jns-admin-contract/contracts/INameManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ninterface INameManager {\\n    function addToWhitelistCharacters(uint32[] calldata charCodes) external;\\n\\n    function removeFromWhitelistCharacters(uint32[] calldata charCodes) external;\\n\\n    function addToTakedownList(string[] calldata tokenIds) external;\\n\\n    function removeFromTakedownList(string[] calldata tokenIds) external;\\n\\n    function addToRestrictWords(string[] calldata words) external;\\n\\n    function removeFromRestrictWords(string[] calldata words) external;\\n\\n    function hashRestrictWords() external view returns (bytes32[] memory);\\n\\n    function isWordWhitelisted(string calldata word) external view returns (bool);\\n\\n    function isWordRestricted(string memory word) external view returns (bool);\\n\\n    function isInTakedownList(string memory tokenId) external view returns (bool);\\n\\n    function getTakedownList() external view returns (string[] memory);\\n\\n    function getRestrictWords() external view returns (string[] memory);\\n}\\n\",\"keccak256\":\"0x312b4f1da4befef0e01822a51618b84323b7eb44e18923c6f01f5319e66f61f2\",\"license\":\"MIT\"},\"jns-admin-contract/contracts/NameManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport \\\"./IJNSAdminContract.sol\\\";\\nimport \\\"./INameManager.sol\\\";\\n\\ncontract NameManager is INameManager {\\n    using EnumerableSet for EnumerableSet.Bytes32Set;\\n\\n    bytes32 public constant NAME_MANAGER_ROLE = keccak256(\\\"NAME_MANAGER_ROLE\\\");\\n\\n    IJNSAdminContract public adminContract;\\n\\n    mapping(uint32 => bool) public whitelistCharacters;\\n    string[] private takedownList;\\n    EnumerableSet.Bytes32Set private takedownSet;\\n    string[] private restrictWords;\\n    EnumerableSet.Bytes32Set private restrictWordSet;\\n\\n    event CharacterWhitelisted(uint32 charCode);\\n    event CharacterRemovedFromWhitelist(uint32 charCode);\\n    event RestrictWordAdded(string word);\\n    event RestrictWordRemoved(string word);\\n    event TakedownAdded(string tokenId);\\n    event TakedownRemoved(string tokenId);\\n\\n    constructor(address _adminContractAddress) {\\n        require(\\n            _adminContractAddress != address(0),\\n            \\\"Admin contract address cannot be the zero address\\\"\\n        );\\n        adminContract = IJNSAdminContract(_adminContractAddress);\\n\\n        _whitelistCharactersAndNumbers();\\n    }\\n\\n    modifier onlyNameManager() {\\n        require(\\n            adminContract.hasRole(NAME_MANAGER_ROLE, msg.sender),\\n            \\\"Caller is not a name manager\\\"\\n        );\\n        _;\\n    }\\n\\n    function addToWhitelistCharacters(\\n        uint32[] calldata charCodes\\n    ) external override onlyNameManager {\\n        for (uint i = 0; i < charCodes.length; i++) {\\n            require(\\n                !whitelistCharacters[charCodes[i]],\\n                \\\"Character already whitelisted\\\"\\n            );\\n            whitelistCharacters[charCodes[i]] = true;\\n            emit CharacterWhitelisted(charCodes[i]);\\n        }\\n    }\\n\\n    function removeFromWhitelistCharacters(\\n        uint32[] calldata charCodes\\n    ) external onlyNameManager {\\n        for (uint i = 0; i < charCodes.length; i++) {\\n            require(\\n                whitelistCharacters[charCodes[i]],\\n                \\\"Character not in whitelist\\\"\\n            );\\n            whitelistCharacters[charCodes[i]] = false;\\n            emit CharacterRemovedFromWhitelist(charCodes[i]);\\n        }\\n    }\\n\\n    function _whitelistCharactersAndNumbers() private {\\n        // Unicode values for 'a' to 'z' are 97 to 122\\n        for (uint32 i = 97; i <= 122; i++) {\\n            whitelistCharacters[i] = true;\\n            emit CharacterWhitelisted(i);\\n        }\\n        // Unicode values for '0' to '9' are 48 to 57\\n        for (uint32 i = 48; i <= 57; i++) {\\n            whitelistCharacters[i] = true;\\n            emit CharacterWhitelisted(i);\\n        }\\n    }\\n\\n    function isWordWhitelisted(\\n        string calldata word\\n    ) public view returns (bool) {\\n        bytes memory wordBytes = bytes(word);\\n        for (uint32 i = 0; i < wordBytes.length; i++) {\\n            uint32 charCode = uint32(uint8(wordBytes[i]));\\n            if (!whitelistCharacters[charCode]) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n\\n    function addToTakedownList(\\n        string[] calldata tokenIds\\n    ) external onlyNameManager {\\n        for (uint i = 0; i < tokenIds.length; ++i) {\\n            bytes32 tokenIdHash = keccak256(abi.encodePacked(tokenIds[i]));\\n\\n            bool added = takedownSet.add(tokenIdHash);\\n            if (added) {\\n                takedownList.push(tokenIds[i]);\\n                emit TakedownAdded(tokenIds[i]);\\n            }\\n        }\\n    }\\n\\n    function removeFromTakedownList(\\n        string[] calldata tokenIds\\n    ) external onlyNameManager {\\n        for (uint i = 0; i < tokenIds.length; ++i) {\\n            bytes32 tokenIdHash = keccak256(abi.encodePacked(tokenIds[i]));\\n\\n            bool removed = takedownSet.remove(tokenIdHash);\\n            if (removed) {\\n                _removeStringFromArray(takedownList, tokenIds[i]);\\n                emit TakedownRemoved(tokenIds[i]);\\n            }\\n        }\\n    }\\n\\n    function isInTakedownList(\\n        string memory tokenId\\n    ) public view returns (bool) {\\n        return takedownSet.contains(keccak256(abi.encodePacked(tokenId)));\\n    }\\n\\n    function addToRestrictWords(\\n        string[] calldata words\\n    ) external onlyNameManager {\\n        for (uint i = 0; i < words.length; ++i) {\\n            bytes32 wordHash = keccak256(abi.encodePacked(words[i]));\\n            bool added = restrictWordSet.add(wordHash);\\n            if (added) {\\n                restrictWords.push(words[i]);\\n                emit RestrictWordAdded(words[i]);\\n            }\\n        }\\n    }\\n\\n    function removeFromRestrictWords(\\n        string[] calldata words\\n    ) external onlyNameManager {\\n        for (uint i = 0; i < words.length; ++i) {\\n            bytes32 wordHash = keccak256(abi.encodePacked(words[i]));\\n\\n            bool removed = restrictWordSet.remove(wordHash);\\n            if (removed) {\\n                _removeStringFromArray(restrictWords, words[i]);\\n                emit RestrictWordRemoved(words[i]);\\n            }\\n        }\\n    }\\n\\n    function isWordRestricted(string memory word) public view returns (bool) {\\n        return restrictWordSet.contains(keccak256(abi.encodePacked(word)));\\n    }\\n\\n    function hashTakedownList() public view returns (bytes32[] memory) {\\n        return takedownSet.values();\\n    }\\n\\n    function hashRestrictWords() public view returns (bytes32[] memory) {\\n        return restrictWordSet.values();\\n    }\\n\\n    function getTakedownList() external view returns (string[] memory) {\\n        return takedownList;\\n    }\\n\\n    function getRestrictWords() external view returns (string[] memory) {\\n        return restrictWords;\\n    }\\n\\n    function _removeStringFromArray(\\n        string[] storage array,\\n        string memory value\\n    ) private {\\n        for (uint i = 0; i < array.length; i++) {\\n            if (keccak256(bytes(array[i])) == keccak256(bytes(value))) {\\n                array[i] = array[array.length - 1];\\n                array.pop();\\n                break;\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6932eae89eb01a1d4fe839af059d502b67613da37ee3e73e86a4394d6694204e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001e5038038062001e508339810160408190526200003491620001af565b6001600160a01b038116620000a95760405162461bcd60e51b815260206004820152603160248201527f41646d696e20636f6e747261637420616464726573732063616e6e6f7420626560448201527020746865207a65726f206164647265737360781b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b038316179055620000ce620000d5565b5062000213565b60615b607a8163ffffffff1611620001405763ffffffff8116600081815260016020818152604092839020805460ff1916909217909155905191825260008051602062001e30833981519152910160405180910390a1806200013781620001e1565b915050620000d8565b5060305b60398163ffffffff1611620001ac5763ffffffff8116600081815260016020818152604092839020805460ff1916909217909155905191825260008051602062001e30833981519152910160405180910390a180620001a381620001e1565b91505062000144565b50565b600060208284031215620001c257600080fd5b81516001600160a01b0381168114620001da57600080fd5b9392505050565b600063ffffffff8083168181036200020957634e487b7160e01b600052601160045260246000fd5b6001019392505050565b611c0d80620002236000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639da5cb6311610097578063c05c5e9411610066578063c05c5e9414610229578063d58bc93f14610254578063e82ac1fd14610269578063eb00d1641461027157600080fd5b80639da5cb63146101d85780639efa1310146101fb578063a0aded221461020e578063adab8a961461021657600080fd5b806375aea76d116100d357806375aea76d1461018a5780637e9ac7e11461019f5780637fed9497146101b25780638c6e9d66146101c557600080fd5b80631be0e1951461010557806345367f561461013f5780635558ad82146101545780636264659314610167575b600080fd5b61012c7f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d81565b6040519081526020015b60405180910390f35b61015261014d366004611563565b610284565b005b610152610162366004611563565b6104af565b61017a6101753660046115a5565b6106ed565b6040519015158152602001610136565b6101926107a2565b604051610136919061163b565b6101526101ad366004611563565b61087b565b6101526101c0366004611563565b610a50565b6101526101d3366004611563565b610c55565b61017a6101e63660046116b5565b60016020526000908152604090205460ff1681565b61017a6102093660046116f1565b610e5a565b610192610e96565b610152610224366004611563565b610f66565b60005461023c906001600160a01b031681565b6040516001600160a01b039091168152602001610136565b61025c6111a4565b60405161013691906117a2565b61025c6111b5565b61017a61027f3660046116f1565b6111c1565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa1580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031691906117e6565b6103675760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e616765720000000060448201526064015b60405180910390fd5b60005b818110156104aa57600083838381811061038657610386611808565b9050602002810190610398919061181e565b6040516020016103a9929190611865565b60408051601f198184030181529190528051602090910120905060006103d06003836111fd565b905080156104975761043b60028686868181106103ef576103ef611808565b9050602002810190610401919061181e565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061121092505050565b7f807f6e1fa4229ee97982c88e3b3fafbd549fafbb5d5e12245694b550a2d5248185858581811061046e5761046e611808565b9050602002810190610480919061181e565b60405161048e929190611875565b60405180910390a15b5050806104a3906118ba565b905061036a565b505050565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa15801561051d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054191906117e6565b61058d5760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e6167657200000000604482015260640161035e565b60005b818110156104aa57600160008484848181106105ae576105ae611808565b90506020020160208101906105c391906116b5565b63ffffffff16815260208101919091526040016000205460ff161561062a5760405162461bcd60e51b815260206004820152601d60248201527f43686172616374657220616c72656164792077686974656c6973746564000000604482015260640161035e565b600180600085858581811061064157610641611808565b905060200201602081019061065691906116b5565b63ffffffff1681526020810191909152604001600020805460ff19169115159190911790557f0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd58383838181106106ae576106ae611808565b90506020020160208101906106c391906116b5565b60405163ffffffff909116815260200160405180910390a1806106e5816118ba565b915050610590565b60008083838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509394505050505b81518163ffffffff161015610795576000828263ffffffff168151811061075257610752611808565b0160209081015160f81c6000818152600190925260409091205490915060ff16610782576000935050505061079c565b508061078d816118d3565b915050610729565b5060019150505b92915050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156108725783829060005260206000200180546107e5906118f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610811906118f6565b801561085e5780601f106108335761010080835404028352916020019161085e565b820191906000526020600020905b81548152906001019060200180831161084157829003601f168201915b5050505050815260200190600101906107c6565b50505050905090565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa1580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090d91906117e6565b6109595760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e6167657200000000604482015260640161035e565b60005b818110156104aa57600083838381811061097857610978611808565b905060200281019061098a919061181e565b60405160200161099b929190611865565b60408051601f198184030181529190528051602090910120905060006109c26006836111fd565b90508015610a3d576109e160058686868181106103ef576103ef611808565b7f9afa2d6232d54dff0f9c85dd348a90507d3cf41c2233b301a01ab1e8b7cf3191858585818110610a1457610a14611808565b9050602002810190610a26919061181e565b604051610a34929190611875565b60405180910390a15b505080610a49906118ba565b905061095c565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa158015610abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae291906117e6565b610b2e5760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e6167657200000000604482015260640161035e565b60005b818110156104aa576000838383818110610b4d57610b4d611808565b9050602002810190610b5f919061181e565b604051602001610b70929190611865565b60408051601f19818403018152919052805160209091012090506000610b976003836112f2565b90508015610c42576002858585818110610bb357610bb3611808565b9050602002810190610bc5919061181e565b82546001810184556000938452602090932090920191610be5918361197e565b507f5c1aedbd68a3ba77c093f693ee402fd4c7f76873b5e0a202395a0abe32970057858585818110610c1957610c19611808565b9050602002810190610c2b919061181e565b604051610c39929190611875565b60405180910390a15b505080610c4e906118ba565b9050610b31565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa158015610cc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce791906117e6565b610d335760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e6167657200000000604482015260640161035e565b60005b818110156104aa576000838383818110610d5257610d52611808565b9050602002810190610d64919061181e565b604051602001610d75929190611865565b60408051601f19818403018152919052805160209091012090506000610d9c6006836112f2565b90508015610e47576005858585818110610db857610db8611808565b9050602002810190610dca919061181e565b82546001810184556000938452602090932090920191610dea918361197e565b507f8559884e4e4b77362c97f3968f548c581c8d1a8953fe2afcb84f5b34032c2a88858585818110610e1e57610e1e611808565b9050602002810190610e30919061181e565b604051610e3e929190611875565b60405180910390a15b505080610e53906118ba565b9050610d36565b600061079c82604051602001610e709190611a3f565b6040516020818303038152906040528051906020012060036112fe90919063ffffffff16565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015610872578382906000526020600020018054610ed9906118f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610f05906118f6565b8015610f525780601f10610f2757610100808354040283529160200191610f52565b820191906000526020600020905b815481529060010190602001808311610f3557829003601f168201915b505050505081526020019060010190610eba565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff891906117e6565b6110445760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e6167657200000000604482015260640161035e565b60005b818110156104aa576001600084848481811061106557611065611808565b905060200201602081019061107a91906116b5565b63ffffffff16815260208101919091526040016000205460ff166110e05760405162461bcd60e51b815260206004820152601a60248201527f436861726163746572206e6f7420696e2077686974656c697374000000000000604482015260640161035e565b6000600160008585858181106110f8576110f8611808565b905060200201602081019061110d91906116b5565b63ffffffff1681526020810191909152604001600020805460ff19169115159190911790557f4f741c47f94dee1010d9edfc67737a1c7c51eb4f8c817892d9fd2dae69def28d83838381811061116557611165611808565b905060200201602081019061117a91906116b5565b60405163ffffffff909116815260200160405180910390a18061119c816118ba565b915050611047565b60606111b06006611316565b905090565b60606111b06003611316565b600061079c826040516020016111d79190611a3f565b6040516020818303038152906040528051906020012060066112fe90919063ffffffff16565b60006112098383611323565b9392505050565b60005b82548110156104aa57818051906020012083828154811061123657611236611808565b9060005260206000200160405161124d9190611a5b565b6040518091039020036112e0578254839061126a90600190611ad1565b8154811061127a5761127a611808565b9060005260206000200183828154811061129657611296611808565b9060005260206000200190816112ac9190611ae4565b50828054806112bd576112bd611bc1565b6001900381819060005260206000200160006112d991906114c1565b9055505050565b806112ea816118ba565b915050611213565b60006112098383611416565b60008181526001830160205260408120541515611209565b6060600061120983611465565b6000818152600183016020526040812054801561140c576000611347600183611ad1565b855490915060009061135b90600190611ad1565b90508181146113c057600086600001828154811061137b5761137b611808565b906000526020600020015490508087600001848154811061139e5761139e611808565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806113d1576113d1611bc1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061079c565b600091505061079c565b600081815260018301602052604081205461145d5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561079c565b50600061079c565b6060816000018054806020026020016040519081016040528092919081815260200182805480156114b557602002820191906000526020600020905b8154815260200190600101908083116114a1575b50505050509050919050565b5080546114cd906118f6565b6000825580601f106114dd575050565b601f0160209004906000526020600020908101906114fb91906114fe565b50565b5b8082111561151357600081556001016114ff565b5090565b60008083601f84011261152957600080fd5b50813567ffffffffffffffff81111561154157600080fd5b6020830191508360208260051b850101111561155c57600080fd5b9250929050565b6000806020838503121561157657600080fd5b823567ffffffffffffffff81111561158d57600080fd5b61159985828601611517565b90969095509350505050565b600080602083850312156115b857600080fd5b823567ffffffffffffffff808211156115d057600080fd5b818501915085601f8301126115e457600080fd5b8135818111156115f357600080fd5b86602082850101111561160557600080fd5b60209290920196919550909350505050565b60005b8381101561163257818101518382015260200161161a565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156116a857878503603f1901845281518051808752611689818989018a8501611617565b601f01601f191695909501860194509285019290850190600101611662565b5092979650505050505050565b6000602082840312156116c757600080fd5b813563ffffffff8116811461120957600080fd5b634e487b7160e01b600052604160045260246000fd5b60006020828403121561170357600080fd5b813567ffffffffffffffff8082111561171b57600080fd5b818401915084601f83011261172f57600080fd5b813581811115611741576117416116db565b604051601f8201601f19908116603f01168101908382118183101715611769576117696116db565b8160405282815287602084870101111561178257600080fd5b826020860160208301376000928101602001929092525095945050505050565b6020808252825182820181905260009190848201906040850190845b818110156117da578351835292840192918401916001016117be565b50909695505050505050565b6000602082840312156117f857600080fd5b8151801515811461120957600080fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261183557600080fd5b83018035915067ffffffffffffffff82111561185057600080fd5b60200191503681900382131561155c57600080fd5b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016118cc576118cc6118a4565b5060010190565b600063ffffffff8083168181036118ec576118ec6118a4565b6001019392505050565b600181811c9082168061190a57607f821691505b60208210810361192a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104aa57600081815260208120601f850160051c810160208610156119575750805b601f850160051c820191505b8181101561197657828155600101611963565b505050505050565b67ffffffffffffffff831115611996576119966116db565b6119aa836119a483546118f6565b83611930565b6000601f8411600181146119de57600085156119c65750838201355b600019600387901b1c1916600186901b178355611a38565b600083815260209020601f19861690835b82811015611a0f57868501358255602094850194600190920191016119ef565b5086821015611a2c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008251611a51818460208701611617565b9190910192915050565b6000808354611a69816118f6565b60018281168015611a815760018114611a9657611ac5565b60ff1984168752821515830287019450611ac5565b8760005260208060002060005b85811015611abc5781548a820152908401908201611aa3565b50505082870194505b50929695505050505050565b8181038181111561079c5761079c6118a4565b818103611aef575050565b611af982546118f6565b67ffffffffffffffff811115611b1157611b116116db565b611b2581611b1f84546118f6565b84611930565b6000601f821160018114611b595760008315611b415750848201545b600019600385901b1c1916600184901b178455611a38565b600085815260209020601f19841690600086815260209020845b83811015611b935782860154825560019586019590910190602001611b73565b5085831015611bb15781850154600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220452e3ea2777912654e90b1850ee88e674e56df044160e4931cd0632d0b92379a64736f6c634300081100330a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd5",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80639da5cb6311610097578063c05c5e9411610066578063c05c5e9414610229578063d58bc93f14610254578063e82ac1fd14610269578063eb00d1641461027157600080fd5b80639da5cb63146101d85780639efa1310146101fb578063a0aded221461020e578063adab8a961461021657600080fd5b806375aea76d116100d357806375aea76d1461018a5780637e9ac7e11461019f5780637fed9497146101b25780638c6e9d66146101c557600080fd5b80631be0e1951461010557806345367f561461013f5780635558ad82146101545780636264659314610167575b600080fd5b61012c7f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d81565b6040519081526020015b60405180910390f35b61015261014d366004611563565b610284565b005b610152610162366004611563565b6104af565b61017a6101753660046115a5565b6106ed565b6040519015158152602001610136565b6101926107a2565b604051610136919061163b565b6101526101ad366004611563565b61087b565b6101526101c0366004611563565b610a50565b6101526101d3366004611563565b610c55565b61017a6101e63660046116b5565b60016020526000908152604090205460ff1681565b61017a6102093660046116f1565b610e5a565b610192610e96565b610152610224366004611563565b610f66565b60005461023c906001600160a01b031681565b6040516001600160a01b039091168152602001610136565b61025c6111a4565b60405161013691906117a2565b61025c6111b5565b61017a61027f3660046116f1565b6111c1565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa1580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031691906117e6565b6103675760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e616765720000000060448201526064015b60405180910390fd5b60005b818110156104aa57600083838381811061038657610386611808565b9050602002810190610398919061181e565b6040516020016103a9929190611865565b60408051601f198184030181529190528051602090910120905060006103d06003836111fd565b905080156104975761043b60028686868181106103ef576103ef611808565b9050602002810190610401919061181e565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061121092505050565b7f807f6e1fa4229ee97982c88e3b3fafbd549fafbb5d5e12245694b550a2d5248185858581811061046e5761046e611808565b9050602002810190610480919061181e565b60405161048e929190611875565b60405180910390a15b5050806104a3906118ba565b905061036a565b505050565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa15801561051d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054191906117e6565b61058d5760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e6167657200000000604482015260640161035e565b60005b818110156104aa57600160008484848181106105ae576105ae611808565b90506020020160208101906105c391906116b5565b63ffffffff16815260208101919091526040016000205460ff161561062a5760405162461bcd60e51b815260206004820152601d60248201527f43686172616374657220616c72656164792077686974656c6973746564000000604482015260640161035e565b600180600085858581811061064157610641611808565b905060200201602081019061065691906116b5565b63ffffffff1681526020810191909152604001600020805460ff19169115159190911790557f0a1d1daec80458b176d8be862934e3e6abd7bafe3a21e1eeb638e65bebbffdd58383838181106106ae576106ae611808565b90506020020160208101906106c391906116b5565b60405163ffffffff909116815260200160405180910390a1806106e5816118ba565b915050610590565b60008083838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509394505050505b81518163ffffffff161015610795576000828263ffffffff168151811061075257610752611808565b0160209081015160f81c6000818152600190925260409091205490915060ff16610782576000935050505061079c565b508061078d816118d3565b915050610729565b5060019150505b92915050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156108725783829060005260206000200180546107e5906118f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610811906118f6565b801561085e5780601f106108335761010080835404028352916020019161085e565b820191906000526020600020905b81548152906001019060200180831161084157829003601f168201915b5050505050815260200190600101906107c6565b50505050905090565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa1580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090d91906117e6565b6109595760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e6167657200000000604482015260640161035e565b60005b818110156104aa57600083838381811061097857610978611808565b905060200281019061098a919061181e565b60405160200161099b929190611865565b60408051601f198184030181529190528051602090910120905060006109c26006836111fd565b90508015610a3d576109e160058686868181106103ef576103ef611808565b7f9afa2d6232d54dff0f9c85dd348a90507d3cf41c2233b301a01ab1e8b7cf3191858585818110610a1457610a14611808565b9050602002810190610a26919061181e565b604051610a34929190611875565b60405180910390a15b505080610a49906118ba565b905061095c565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa158015610abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae291906117e6565b610b2e5760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e6167657200000000604482015260640161035e565b60005b818110156104aa576000838383818110610b4d57610b4d611808565b9050602002810190610b5f919061181e565b604051602001610b70929190611865565b60408051601f19818403018152919052805160209091012090506000610b976003836112f2565b90508015610c42576002858585818110610bb357610bb3611808565b9050602002810190610bc5919061181e565b82546001810184556000938452602090932090920191610be5918361197e565b507f5c1aedbd68a3ba77c093f693ee402fd4c7f76873b5e0a202395a0abe32970057858585818110610c1957610c19611808565b9050602002810190610c2b919061181e565b604051610c39929190611875565b60405180910390a15b505080610c4e906118ba565b9050610b31565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa158015610cc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce791906117e6565b610d335760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e6167657200000000604482015260640161035e565b60005b818110156104aa576000838383818110610d5257610d52611808565b9050602002810190610d64919061181e565b604051602001610d75929190611865565b60408051601f19818403018152919052805160209091012090506000610d9c6006836112f2565b90508015610e47576005858585818110610db857610db8611808565b9050602002810190610dca919061181e565b82546001810184556000938452602090932090920191610dea918361197e565b507f8559884e4e4b77362c97f3968f548c581c8d1a8953fe2afcb84f5b34032c2a88858585818110610e1e57610e1e611808565b9050602002810190610e30919061181e565b604051610e3e929190611875565b60405180910390a15b505080610e53906118ba565b9050610d36565b600061079c82604051602001610e709190611a3f565b6040516020818303038152906040528051906020012060036112fe90919063ffffffff16565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015610872578382906000526020600020018054610ed9906118f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610f05906118f6565b8015610f525780601f10610f2757610100808354040283529160200191610f52565b820191906000526020600020905b815481529060010190602001808311610f3557829003601f168201915b505050505081526020019060010190610eba565b600054604051632474521560e21b81527f6ae19fd703cb304b53d5f09f6a0ce96b7c6a7edd912859ca6c4ed719bcab610d60048201523360248201526001600160a01b03909116906391d1485490604401602060405180830381865afa158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff891906117e6565b6110445760405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742061206e616d65206d616e6167657200000000604482015260640161035e565b60005b818110156104aa576001600084848481811061106557611065611808565b905060200201602081019061107a91906116b5565b63ffffffff16815260208101919091526040016000205460ff166110e05760405162461bcd60e51b815260206004820152601a60248201527f436861726163746572206e6f7420696e2077686974656c697374000000000000604482015260640161035e565b6000600160008585858181106110f8576110f8611808565b905060200201602081019061110d91906116b5565b63ffffffff1681526020810191909152604001600020805460ff19169115159190911790557f4f741c47f94dee1010d9edfc67737a1c7c51eb4f8c817892d9fd2dae69def28d83838381811061116557611165611808565b905060200201602081019061117a91906116b5565b60405163ffffffff909116815260200160405180910390a18061119c816118ba565b915050611047565b60606111b06006611316565b905090565b60606111b06003611316565b600061079c826040516020016111d79190611a3f565b6040516020818303038152906040528051906020012060066112fe90919063ffffffff16565b60006112098383611323565b9392505050565b60005b82548110156104aa57818051906020012083828154811061123657611236611808565b9060005260206000200160405161124d9190611a5b565b6040518091039020036112e0578254839061126a90600190611ad1565b8154811061127a5761127a611808565b9060005260206000200183828154811061129657611296611808565b9060005260206000200190816112ac9190611ae4565b50828054806112bd576112bd611bc1565b6001900381819060005260206000200160006112d991906114c1565b9055505050565b806112ea816118ba565b915050611213565b60006112098383611416565b60008181526001830160205260408120541515611209565b6060600061120983611465565b6000818152600183016020526040812054801561140c576000611347600183611ad1565b855490915060009061135b90600190611ad1565b90508181146113c057600086600001828154811061137b5761137b611808565b906000526020600020015490508087600001848154811061139e5761139e611808565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806113d1576113d1611bc1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061079c565b600091505061079c565b600081815260018301602052604081205461145d5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561079c565b50600061079c565b6060816000018054806020026020016040519081016040528092919081815260200182805480156114b557602002820191906000526020600020905b8154815260200190600101908083116114a1575b50505050509050919050565b5080546114cd906118f6565b6000825580601f106114dd575050565b601f0160209004906000526020600020908101906114fb91906114fe565b50565b5b8082111561151357600081556001016114ff565b5090565b60008083601f84011261152957600080fd5b50813567ffffffffffffffff81111561154157600080fd5b6020830191508360208260051b850101111561155c57600080fd5b9250929050565b6000806020838503121561157657600080fd5b823567ffffffffffffffff81111561158d57600080fd5b61159985828601611517565b90969095509350505050565b600080602083850312156115b857600080fd5b823567ffffffffffffffff808211156115d057600080fd5b818501915085601f8301126115e457600080fd5b8135818111156115f357600080fd5b86602082850101111561160557600080fd5b60209290920196919550909350505050565b60005b8381101561163257818101518382015260200161161a565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156116a857878503603f1901845281518051808752611689818989018a8501611617565b601f01601f191695909501860194509285019290850190600101611662565b5092979650505050505050565b6000602082840312156116c757600080fd5b813563ffffffff8116811461120957600080fd5b634e487b7160e01b600052604160045260246000fd5b60006020828403121561170357600080fd5b813567ffffffffffffffff8082111561171b57600080fd5b818401915084601f83011261172f57600080fd5b813581811115611741576117416116db565b604051601f8201601f19908116603f01168101908382118183101715611769576117696116db565b8160405282815287602084870101111561178257600080fd5b826020860160208301376000928101602001929092525095945050505050565b6020808252825182820181905260009190848201906040850190845b818110156117da578351835292840192918401916001016117be565b50909695505050505050565b6000602082840312156117f857600080fd5b8151801515811461120957600080fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261183557600080fd5b83018035915067ffffffffffffffff82111561185057600080fd5b60200191503681900382131561155c57600080fd5b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016118cc576118cc6118a4565b5060010190565b600063ffffffff8083168181036118ec576118ec6118a4565b6001019392505050565b600181811c9082168061190a57607f821691505b60208210810361192a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104aa57600081815260208120601f850160051c810160208610156119575750805b601f850160051c820191505b8181101561197657828155600101611963565b505050505050565b67ffffffffffffffff831115611996576119966116db565b6119aa836119a483546118f6565b83611930565b6000601f8411600181146119de57600085156119c65750838201355b600019600387901b1c1916600186901b178355611a38565b600083815260209020601f19861690835b82811015611a0f57868501358255602094850194600190920191016119ef565b5086821015611a2c5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008251611a51818460208701611617565b9190910192915050565b6000808354611a69816118f6565b60018281168015611a815760018114611a9657611ac5565b60ff1984168752821515830287019450611ac5565b8760005260208060002060005b85811015611abc5781548a820152908401908201611aa3565b50505082870194505b50929695505050505050565b8181038181111561079c5761079c6118a4565b818103611aef575050565b611af982546118f6565b67ffffffffffffffff811115611b1157611b116116db565b611b2581611b1f84546118f6565b84611930565b6000601f821160018114611b595760008315611b415750848201545b600019600385901b1c1916600184901b178455611a38565b600085815260209020601f19841690600086815260209020845b83811015611b935782860154825560019586019590910190602001611b73565b5085831015611bb15781850154600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220452e3ea2777912654e90b1850ee88e674e56df044160e4931cd0632d0b92379a64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30387,
        "contract": "jns-admin-contract/contracts/NameManager.sol:NameManager",
        "label": "adminContract",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IJNSAdminContract)29985"
      },
      {
        "astId": 30391,
        "contract": "jns-admin-contract/contracts/NameManager.sol:NameManager",
        "label": "whitelistCharacters",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint32,t_bool)"
      },
      {
        "astId": 30394,
        "contract": "jns-admin-contract/contracts/NameManager.sol:NameManager",
        "label": "takedownList",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 30397,
        "contract": "jns-admin-contract/contracts/NameManager.sol:NameManager",
        "label": "takedownSet",
        "offset": 0,
        "slot": "3",
        "type": "t_struct(Bytes32Set)7019_storage"
      },
      {
        "astId": 30400,
        "contract": "jns-admin-contract/contracts/NameManager.sol:NameManager",
        "label": "restrictWords",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 30403,
        "contract": "jns-admin-contract/contracts/NameManager.sol:NameManager",
        "label": "restrictWordSet",
        "offset": 0,
        "slot": "6",
        "type": "t_struct(Bytes32Set)7019_storage"
      }
    ],
    "types": {
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IJNSAdminContract)29985": {
        "encoding": "inplace",
        "label": "contract IJNSAdminContract",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint32,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Bytes32Set)7019_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Bytes32Set",
        "members": [
          {
            "astId": 7018,
            "contract": "jns-admin-contract/contracts/NameManager.sol:NameManager",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)6825_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)6825_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 6820,
            "contract": "jns-admin-contract/contracts/NameManager.sol:NameManager",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 6824,
            "contract": "jns-admin-contract/contracts/NameManager.sol:NameManager",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}